{"ast":null,"code":"import _defineProperty from\"/home/user/MyLinuxProjects/delolive/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _slicedToArray from\"/home/user/MyLinuxProjects/delolive/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useEffect,useState}from'react';import'./FormInput.css';import{useDate}from'../../../hooks/useDate';import{selectUserData,setIsSetPassword,setPassword,setPasswordUpdate,setUserData,selectSendCounter}from'../../globalSlices/registrationSlice';import{useDispatch,useSelector}from'react-redux';import{selectLoginCounter,setLoginData}from'../../globalSlices/loginSlice';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var FormInput=function FormInput(_ref){var field=_ref.field,placeholder=_ref.placeholder,_ref$isTel=_ref.isTel,isTel=_ref$isTel===void 0?false:_ref$isTel,title=_ref.title,_ref$checkPassword=_ref.checkPassword,checkPassword=_ref$checkPassword===void 0?false:_ref$checkPassword,errorMessage=_ref.errorMessage,_ref$validation=_ref.validation,validation=_ref$validation===void 0?{minLength:1,maxLength:100}:_ref$validation,_ref$isPassword=_ref.isPassword,isPassword=_ref$isPassword===void 0?false:_ref$isPassword,_ref$isInfo=_ref.isInfo,isInfo=_ref$isInfo===void 0?false:_ref$isInfo,_ref$isCard=_ref.isCard,isCard=_ref$isCard===void 0?false:_ref$isCard,_ref$isLogin=_ref.isLogin,isLogin=_ref$isLogin===void 0?false:_ref$isLogin,_ref$width=_ref.width,width=_ref$width===void 0?'normal':_ref$width,_ref$indexOne=_ref.indexOne,indexOne=_ref$indexOne===void 0?false:_ref$indexOne,_ref$date=_ref.date,date=_ref$date===void 0?false:_ref$date,_ref$inputType=_ref.inputType,inputType=_ref$inputType===void 0?\"text\":_ref$inputType;var dispatch=useDispatch();var selectedReg=useSelector(selectSendCounter);var selectedLogin=useSelector(selectLoginCounter);var userDateRedux=useSelector(selectUserData);var checkPasswordDate=useSelector(setPassword);var _useState=useState(true),_useState2=_slicedToArray(_useState,2),passwordShow=_useState2[0],setPasswordShow=_useState2[1];var _useState3=useState(0),_useState4=_slicedToArray(_useState3,2),counterSend=_useState4[0],setCounterSend=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),isError=_useState6[0],setIsError=_useState6[1];var _useState7=useState(''),_useState8=_slicedToArray(_useState7,2),ErrorMsg=_useState8[0],setErrorMsg=_useState8[1];var _useState9=useState(0),_useState10=_slicedToArray(_useState9,2),inputWidth=_useState10[0],setInputWidth=_useState10[1];var _useState11=useState(0),_useState12=_slicedToArray(_useState11,2),marginTop=_useState12[0],setMarginTop=_useState12[1];var _useState13=useState('+7 (___) ___-__-_'),_useState14=_slicedToArray(_useState13,2),telNum=_useState14[0],setTelNum=_useState14[1];var _useState15=useState(''),_useState16=_slicedToArray(_useState15,2),inputText=_useState16[0],setInputText=_useState16[1];var _useState17=useState(useDate()),_useState18=_slicedToArray(_useState17,2),inputDate=_useState18[0],setInputDate=_useState18[1];var _useState19=useState(''),_useState20=_slicedToArray(_useState19,2),cardText=_useState20[0],setCardText=_useState20[1];var _useState21=useState(1),_useState22=_slicedToArray(_useState21,2),sendTime=_useState22[0],setSendTime=_useState22[1];var _useState23=useState(null),_useState24=_slicedToArray(_useState23,2),intervalId=_useState24[0],setIntervalId=_useState24[1];var passwordShowHandler=function passwordShowHandler(){if(passwordShow){setPasswordShow(false);return;}setPasswordShow(true);};var createErrorMsg=function createErrorMsg(msg){setIsError(true);setErrorMsg(msg);};var checkValid=function checkValid(){var valid=false;var currentText;if(date)currentText=inputDate;else if(isTel)currentText=telNum;else if(isCard)currentText=cardText;else currentText=inputText;if(field==='none')return false;if(validation.minLength<=currentText.length||isTel){if(validation.maxLength>=currentText.length||isTel){if(field!=='birthdate'&&field!=='card'&&field!=='telephone'&&field!=='password'&&field!=='check'){currentText=currentText.trim();if(!/\\s/g.test(currentText)){setIsError(false);return true;}else{createErrorMsg('Это поле не должно содержать знак пробела');}}else{if(isTel){if(currentText[0]==='+'){var newCT=currentText.substring(1);var newNewCT=newCT.replace('7','8');currentText=newNewCT;}currentText=currentText.replaceAll(' ','');currentText=currentText.replaceAll('-','');currentText=currentText.replace('(','');currentText=currentText.replace(')','');if(validation.minLength<currentText.length){if(validation.maxLength>=currentText.length){setIsError(false);return true;}else{createErrorMsg('Максимальное кол-во символов для этого поля - '+String(validation.maxLength));}}else{createErrorMsg('Минимальное кол-во символов для этого поля - '+String(validation.minLength));}}else if(isPassword){if(!/\\s/g.test(currentText)&&!/-/g.test(currentText)&&!/\\//g.test(currentText)){setIsError(false);return true;}else{createErrorMsg('Пароль не должен содержать символов: \"пробел\" , \"/\" , \"/\"');}}else if(checkPassword){if(checkPasswordDate===inputText){setIsError(false);dispatch(setIsSetPassword(true));return true;}else{createErrorMsg('Пароли не совпадают');}}else if(field==='birthdate'){setIsError(false);return true;}else if(field==='card'){setIsError(false);return true;}}}else{createErrorMsg('Максимальное кол-во символов для этого поля - '+String(validation.maxLength));}}else{if(field==='fatherName'){setIsError(false);return true;}createErrorMsg('Минимальное кол-во символов для этого поля - '+String(validation.minLength));}return valid;};var sendLogin=function sendLogin(){var dataValue=inputText;if(inputText.length===0){if(field==='password'){createErrorMsg('Введите пароль');}else{createErrorMsg('Введите почту');}}else{setIsError(false);dispatch(setLoginData(_defineProperty({},field,dataValue)));}};var sendData=function sendData(){var dataValue;if(date)dataValue=inputDate;else if(isTel)dataValue=telNum;else if(isCard)dataValue=cardText.replace(/\\s/g,\"\");else dataValue=inputText;var valid=checkValid();if(isTel){if(dataValue[0]==='+'){var newCT=dataValue.substring(1);var newNewCT=newCT.replace('7','8');dataValue=newNewCT;}dataValue=dataValue.replaceAll(' ','');dataValue=dataValue.replaceAll('-','');dataValue=dataValue.replace('(','');dataValue=dataValue.replace(')','');}if(!valid){if(isTel)setTelNum('+7 (___) ___-__-_');else setInputText('');}if(field!=='none'&&valid){console.log('Отработало');dispatch(setUserData(_defineProperty({},field,dataValue)));}};var counter=0;var inputHandler=function inputHandler(e){var inputValue=e.target.value;setInputText(inputValue);};var passwordHandler=function passwordHandler(e){var inputValue=e.target.value;counter=0;clearInterval(intervalId);setIntervalId(setInterval(function(){counter=counter+0.5;if(counter===sendTime){dispatch(setPasswordUpdate(inputValue));clearInterval(intervalId);return;}},500));setInputText(inputValue);};var dateHandler=function dateHandler(e){var inputValue=e.target.value;setInputDate(inputValue);};var cardHandler=function cardHandler(e){var inputValue=e.target.value;var beforeValue='';var counter=0;inputValue.replace(/\\s/g,\"\").split('').forEach(function(cv){if(counter%4==0){beforeValue=beforeValue+' '+cv;}else{beforeValue=beforeValue+cv;}counter++;});beforeValue=beforeValue.trim();if(inputValue.replace(/\\s/g,\"\").length<=16){setCardText(beforeValue);}};var telNumHandler=function telNumHandler(e){var inputValue=e.target.value;if(inputValue.length-1<18&&Number(inputValue[inputValue.length-1])>=0){var copyInputValue=inputValue.split('');copyInputValue.every(function(cv,i,arr){if(cv==='_'){arr[i]=inputValue[inputValue.length-1];arr[inputValue.length-1]='';return false;}else return true;});var newVal=copyInputValue.join('');setTelNum(newVal);}else{setTelNum(inputValue);}};var getMarginTop=function getMarginTop(){if(!indexOne){if(isError){setMarginTop(29);}else{setMarginTop(53);}}};var getInputType=function getInputType(){if(isPassword){if(passwordShow)return'password';else return inputType;}else if(date)return'date';else return inputType;};var getInputValue=function getInputValue(){if(isTel)return telNum;else if(isCard)return cardText;else if(date)return inputDate;else return inputText;};var getWidth=function getWidth(){if(inputWidth===0){var decrementWidth=0;if(isPassword){decrementWidth=20;}switch(width){case'normal':setInputWidth(265-decrementWidth);break;case'small':setInputWidth(165-decrementWidth);break;case'large':setInputWidth(365-decrementWidth);break;}}};useEffect(function(){getWidth();getMarginTop();},[]);useEffect(function(){if(counterSend!==0){if(isLogin){sendLogin();}else{sendData();}}setCounterSend(1);},[selectedReg,selectedLogin]);return/*#__PURE__*/_jsxs(\"div\",{className:\"FormInput\",style:{marginTop:marginTop},children:[/*#__PURE__*/_jsx(\"div\",{className:\"FormInput__title\",children:title}),/*#__PURE__*/_jsxs(\"div\",{style:{display:isPassword?'flex':'block',alignItems:'center',maxWidth:inputWidth+30},className:isError?'FormInput__bar_error':'FormInput__bar',children:[/*#__PURE__*/_jsx(\"input\",{style:{width:inputWidth},type:getInputType(),onChange:isTel?telNumHandler:date?dateHandler:isPassword?passwordHandler:isCard?cardHandler:inputHandler,value:getInputValue(),autoComplete:\"new-password\",className:\"FormInput_input\",placeholder:isTel?'+7(___)__-__-__':placeholder}),isPassword?/*#__PURE__*/_jsx(\"div\",{className:passwordShow?'password_show':'password_hide',onClick:passwordShowHandler}):/*#__PURE__*/_jsx(\"div\",{}),isInfo?/*#__PURE__*/_jsx(\"div\",{className:\"info\"}):/*#__PURE__*/_jsx(\"div\",{})]}),isError?errorMessage?/*#__PURE__*/_jsx(\"div\",{className:\"FormInput__errorMessage\",style:{maxWidth:inputWidth},children:errorMessage}):/*#__PURE__*/_jsx(\"div\",{className:\"FormInput__errorMessage\",style:{maxWidth:inputWidth},children:ErrorMsg}):/*#__PURE__*/_jsx(\"div\",{})]});};export default FormInput;","map":{"version":3,"names":["React","useEffect","useState","useDate","selectUserData","setIsSetPassword","setPassword","setPasswordUpdate","setUserData","selectSendCounter","useDispatch","useSelector","selectLoginCounter","setLoginData","FormInput","field","placeholder","isTel","title","checkPassword","errorMessage","validation","minLength","maxLength","isPassword","isInfo","isCard","isLogin","width","indexOne","date","inputType","dispatch","selectedReg","selectedLogin","userDateRedux","checkPasswordDate","passwordShow","setPasswordShow","counterSend","setCounterSend","isError","setIsError","ErrorMsg","setErrorMsg","inputWidth","setInputWidth","marginTop","setMarginTop","telNum","setTelNum","inputText","setInputText","inputDate","setInputDate","cardText","setCardText","sendTime","setSendTime","intervalId","setIntervalId","passwordShowHandler","createErrorMsg","msg","checkValid","valid","currentText","length","trim","test","newCT","substring","newNewCT","replace","replaceAll","String","sendLogin","dataValue","sendData","console","log","counter","inputHandler","e","inputValue","target","value","passwordHandler","clearInterval","setInterval","dateHandler","cardHandler","beforeValue","split","forEach","cv","telNumHandler","Number","copyInputValue","every","i","arr","newVal","join","getMarginTop","getInputType","getInputValue","getWidth","decrementWidth","display","alignItems","maxWidth"],"sources":["/home/user/MyLinuxProjects/delolive/frontend/src/components/UI/FormInput/FormInput.tsx"],"sourcesContent":["import React, { FC, useEffect, useState } from 'react';\nimport './FormInput.css'\nimport { useDate } from '../../../hooks/useDate'\nimport { selectValid, selectUserData, setIsSetPassword, setPassword, setPasswordUpdate, setUserData, selectSendCounter } from '../../globalSlices/registrationSlice';\nimport { useDispatch, useSelector } from 'react-redux';\nimport IFormInputProps from '../../../types/interfaces/IFormInputProps';\nimport { selectLogin, selectLoginCounter, setLoginData } from '../../globalSlices/loginSlice';\n\nconst FormInput: FC<IFormInputProps> = ({\n    field,\n    placeholder,\n    isTel = false,\n    title,\n    checkPassword = false,\n    errorMessage,\n    validation = {\n        minLength: 1,\n        maxLength: 100,\n\n    },\n    isPassword = false,\n    isInfo = false,\n    isCard = false,\n    isLogin = false,\n    width = 'normal',\n    indexOne = false,\n    date = false,\n    inputType = \"text\"\n}) => {\n    const dispatch = useDispatch()\n    const selectedReg = useSelector(selectSendCounter)\n    const selectedLogin = useSelector(selectLoginCounter)\n    const userDateRedux = useSelector(selectUserData)\n    const checkPasswordDate = useSelector(setPassword)\n\n    const [passwordShow, setPasswordShow] = useState <boolean>(true)\n    const [counterSend, setCounterSend] = useState <number>(0)\n    const [isError, setIsError] = useState <boolean>(false)\n    const [ErrorMsg, setErrorMsg] = useState <string>('')\n    const [inputWidth, setInputWidth] = useState <number>(0)\n    const [marginTop, setMarginTop] = useState <number>(0)\n    const [telNum, setTelNum] = useState <string>('+7 (___) ___-__-_')\n    const [inputText, setInputText] = useState <string>('')\n    const [inputDate, setInputDate] = useState <string>(useDate())\n    const [cardText, setCardText] = useState <string>('')\n\n    const [sendTime, setSendTime] = useState <number>(1);\n    const [intervalId, setIntervalId] = useState <any>(null);\n\n    const passwordShowHandler = () => {\n        if(passwordShow){\n            setPasswordShow(false)\n            return\n        }\n        setPasswordShow(true)\n    }\n\n    const createErrorMsg = (msg: string) => {\n        setIsError(true)\n        setErrorMsg(msg)\n    }\n\n    const checkValid = (): boolean => {\n        let valid: boolean = false\n        let currentText;\n\n        if(date) currentText = inputDate\n        else if(isTel) currentText = telNum\n        else if(isCard) currentText = cardText\n        else currentText = inputText\n        \n        if(field === 'none') return false\n        if(validation.minLength <= currentText.length || isTel){\n            if(validation.maxLength >= currentText.length || isTel){\n                if(field !== 'birthdate' && field !== 'card' && field !== 'telephone' && field !== 'password' && field !== 'check'){\n                    currentText = currentText.trim()\n                    if (!/\\s/g.test(currentText)){\n                        setIsError(false)\n                        return true\n                    }\n                    else{\n                        createErrorMsg('Это поле не должно содержать знак пробела')\n                    }\n                }\n                else{\n                    if(isTel){\n                        if(currentText[0] === '+'){\n                            let newCT = currentText.substring(1)\n                            let newNewCT = newCT.replace('7','8');\n                            currentText = newNewCT\n                        }\n                        currentText = currentText.replaceAll(' ', '')\n                        currentText = currentText.replaceAll('-', '')\n                        currentText = currentText.replace('(', '')\n                        currentText = currentText.replace(')', '')\n                        \n                        if(validation.minLength < currentText.length){\n                            if(validation.maxLength >= currentText.length){\n                                setIsError(false)\n                                return true\n                            }\n                            else{\n                                createErrorMsg('Максимальное кол-во символов для этого поля - ' + String(validation.maxLength))\n                            }\n                        }\n                        else{\n                            createErrorMsg('Минимальное кол-во символов для этого поля - ' + String(validation.minLength))\n                        }\n                    }\n                    else if(isPassword){\n                        if(!/\\s/g.test(currentText) && !/-/g.test(currentText) && !/\\//g.test(currentText)){\n                            setIsError(false)\n                            return true\n                        }\n                        else{\n                            createErrorMsg('Пароль не должен содержать символов: \"пробел\" , \"/\" , \"/\"')\n                        }\n                    }\n                    else if(checkPassword){\n                        if(checkPasswordDate === inputText){\n                            setIsError(false)\n                            dispatch(setIsSetPassword(true))\n                            return true\n                        }\n                        else{\n                            createErrorMsg('Пароли не совпадают')\n                        }\n                    }\n                    else if(field === 'birthdate'){\n                        setIsError(false)\n                        return true\n                    }\n\n                    else if(field === 'card'){\n                        setIsError(false)\n                        return true\n                    }\n                    \n                }\n            }\n            else{\n                createErrorMsg('Максимальное кол-во символов для этого поля - ' + String(validation.maxLength))\n            }\n        }\n        else{\n            if(field === 'fatherName') {\n                setIsError(false)\n                return true\n            }\n            createErrorMsg('Минимальное кол-во символов для этого поля - ' + String(validation.minLength))\n        }\n        return valid\n    }\n    const sendLogin = () => {\n        let dataValue = inputText\n        if(inputText.length === 0) {\n            if(field === 'password') {\n                createErrorMsg('Введите пароль')\n            }\n            else {\n                createErrorMsg('Введите почту')\n            }\n        }\n        else {\n            setIsError(false)\n            dispatch(setLoginData({[field]: dataValue}))\n        }\n    }\n\n    const sendData = () => {\n        let dataValue;\n\n        if(date) dataValue = inputDate\n        else if(isTel) dataValue = telNum\n        else if(isCard) dataValue = cardText.replace(/\\s/g, \"\");\n        else dataValue = inputText\n        const valid: boolean = checkValid()\n\n        if(isTel){\n            if(dataValue[0] === '+'){\n                let newCT = dataValue.substring(1)\n                let newNewCT = newCT.replace('7','8');\n                dataValue = newNewCT\n            }\n            dataValue = dataValue.replaceAll(' ', '')\n            dataValue = dataValue.replaceAll('-', '')\n            dataValue = dataValue.replace('(', '')\n            dataValue = dataValue.replace(')', '')\n        }\n        if(!valid){\n            if(isTel) setTelNum('+7 (___) ___-__-_')\n            else setInputText('')\n        }\n\n        if(field !== 'none' && valid){\n            console.log('Отработало')\n            dispatch(setUserData({[field]: dataValue}))\n        }\n    }\n    let counter = 0\n    const inputHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\n        let inputValue: string = e.target.value\n        setInputText(inputValue)\n    }\n    const passwordHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\n        let inputValue: string = e.target.value\n        counter = 0\n        clearInterval(intervalId);\n\n        setIntervalId(setInterval(() => {\n            counter = counter + 0.5\n            if (counter === sendTime) {\n                dispatch(setPasswordUpdate(inputValue))\n                clearInterval(intervalId);\n                return\n            }\n        }, 500));\n        setInputText(inputValue)\n\n    }\n    const dateHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\n        let inputValue: string = e.target.value\n        setInputDate(inputValue)\n    }\n    const cardHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\n        let inputValue: string = e.target.value\n        let beforeValue: string = ''\n        let counter = 0\n        \n        inputValue.replace(/\\s/g, \"\").split('').forEach((cv) => {\n\n            if(counter % 4 == 0) {\n                beforeValue = beforeValue + ' ' + cv\n            }\n            else {\n                beforeValue = beforeValue + cv\n            }\n            counter++\n        })\n        beforeValue = beforeValue.trim()\n        if(inputValue.replace(/\\s/g, \"\").length <= 16) {\n            setCardText(beforeValue)\n        }\n    }\n    const telNumHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\n        let inputValue: string = e.target.value\n\n        if(inputValue.length - 1 < 18 && Number(inputValue[inputValue.length - 1]) >= 0){\n            let copyInputValue: string[] = inputValue.split('')\n            copyInputValue.every((cv, i, arr) => {\n                if(cv === '_') {\n                    arr[i] = inputValue[inputValue.length - 1]\n                    arr[inputValue.length - 1] = ''\n                    return false\n                }\n                else return true\n            })\n\n            let newVal: string = copyInputValue.join('')\n            setTelNum(newVal)\n        }\n        else{\n            setTelNum(inputValue)\n        }\n\n    }\n    const getMarginTop = () => {\n        if(!indexOne){\n            if(isError){\n                setMarginTop(29)\n            }\n            else{\n                setMarginTop(53)\n            }\n        }\n    }\n    const getInputType = () => {\n        if(isPassword){\n            if(passwordShow) return 'password'\n            else return inputType\n        }\n        else if(date) return 'date'\n        else return inputType\n    }\n    \n    const getInputValue = () => {\n        if(isTel) return telNum\n        else if(isCard) return cardText\n        else if(date) return inputDate\n        else return inputText\n    }\n    const getWidth = () => {\n        if(inputWidth === 0){\n            let decrementWidth = 0\n            if(isPassword){\n                decrementWidth = 20\n            }\n            switch(width){\n                case 'normal':\n                    setInputWidth(265 - decrementWidth)\n                    break\n                case 'small':\n                    setInputWidth(165 - decrementWidth)\n                    break\n                case 'large':\n                    setInputWidth(365 - decrementWidth)\n                    break\n            }\n        }\n    }\n\n    useEffect(() => {\n        getWidth()\n        getMarginTop()\n    }, [])\n    useEffect(() => {\n        if(counterSend !== 0) {\n            if(isLogin) {\n                sendLogin()\n            }\n            else {\n                sendData()\n            }\n        }\n        setCounterSend(1)\n    }, [selectedReg, selectedLogin])\n    return (\n        <div className='FormInput' style={{marginTop: marginTop}}   >\n            <div className=\"FormInput__title\">{title}</div>\n            <div \n            style={{display: isPassword ? 'flex' : 'block', alignItems: 'center', maxWidth: inputWidth + 30}}\n            className={isError ? 'FormInput__bar_error' : 'FormInput__bar'}>\n                <input\n                style={{width: inputWidth}}\n                type={getInputType()}\n                onChange={isTel ? telNumHandler : date ? dateHandler : isPassword ? passwordHandler : isCard ? cardHandler: inputHandler}\n                value={getInputValue()}\n                autoComplete='new-password'\n                className='FormInput_input'\n                placeholder={isTel ? '+7(___)__-__-__' : placeholder}\n                />\n                {\n                    isPassword ? \n                    <div\n                    className={passwordShow ? 'password_show' : 'password_hide'}\n                    onClick={passwordShowHandler}\n                    ></div>\n                    :\n                    <div></div>\n                }\n                {\n                    isInfo ?\n                    <div className='info'></div>\n                    :\n                    <div></div>\n                }\n            </div>\n            {\n                isError ?\n                errorMessage\n                    ? \n                        <div className='FormInput__errorMessage' style={{maxWidth: inputWidth}}>{errorMessage}</div>\n                    :\n                        <div className='FormInput__errorMessage' style={{maxWidth: inputWidth}}>{ErrorMsg}</div>\n                :\n                <div></div>\n            }\n        </div>\n    );\n};\n\nexport default FormInput;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}